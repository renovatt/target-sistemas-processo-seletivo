import Head from 'next/head'
import React, { FormEvent } from 'react'
import * as S from './style'
import data from '../../../db.json'
import { DailyBillingProps, StatesProps } from '@/@types'
import { checkFibonacci, dailyBillingProcess, getPercentage, inverterString } from '@/connections'

export default function Cases() {
    const [inputValue, setInput] = React.useState('')
    const [inputReverse, setInputReverse] = React.useState('')
    const [resulteReverse, setResulteReverse] = React.useState('')
    const [isFibonacci, setFibonacci] = React.useState(false)
    const [dailyBilling, setDailyBilling] = React.useState<DailyBillingProps>()
    const [percentages, setPercentages] = React.useState<StatesProps[]>()

    function handleSubmit(event: FormEvent<HTMLElement>) {
        event.preventDefault()
        const response = checkFibonacci(Number(inputValue))
        if (response) {
            setFibonacci(true)
        } else {
            setFibonacci(false)
        }
        setInput('')
    }

    React.useEffect(() => {
        const response = dailyBillingProcess(data)
        setDailyBilling(response)
    }, [])

    React.useEffect(() => {
        const response = getPercentage()
        setPercentages(response)
    }, [])

    function reverseString(event: FormEvent<HTMLElement>) {
        event.preventDefault()
        const response = inverterString(inputReverse)
        setResulteReverse(response)
        setInputReverse('')
    }

    return (
        <>
            <Head>
                <title>Start Sistemas - Cases</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <S.Content>
                <S.Fibonacci>
                    <S.Title>1° Case</S.Title>
                    <S.Subtitle>Fibonacci Case</S.Subtitle>
                    <S.Form onSubmit={handleSubmit} >
                        <S.Input
                            required
                            type="number"
                            placeholder='Digite um número'
                            value={inputValue}
                            onChange={({ target }) => setInput(target.value)} />
                        <S.Button>Enviar</S.Button>
                    </S.Form>
                    {isFibonacci ? <S.Text>Pertence à sequência de Fibonacci</S.Text> :
                        <S.Text>Não pertence à sequência de Fibonacci</S.Text>
                    }
                </S.Fibonacci>

                <S.DailyBilling>
                    <S.Title>2° Case</S.Title>
                    <S.Subtitle>Faturamento Diário de acordo com o json recebido:</S.Subtitle>
                    <S.DailyBillingContent>
                        <S.Text>O menor valor de faturamento ocorrido em um dia do mês: {dailyBilling?.lowerBilling
                            .toLocaleString('pt-br', {
                                style: 'currency',
                                currency: 'BRL'
                            })}
                        </S.Text>

                        <S.Text>O maior valor de faturamento ocorrido em um dia do mês: {dailyBilling?.higherBilling
                            .toLocaleString('pt-br', {
                                style: 'currency',
                                currency: 'BRL'
                            })}
                        </S.Text>

                        <S.Text>Total: {dailyBilling?.total
                            .toLocaleString('pt-br', {
                                style: 'currency',
                                currency: 'BRL'
                            })}
                        </S.Text>

                        <S.Text>Número de dias no mês em que o valor de faturamento diário foi superior à média mensal: {dailyBilling?.daysAboveAverage} dias.
                        </S.Text>
                    </S.DailyBillingContent>
                </S.DailyBilling>

                <S.BillingForState>
                    <S.Title>3° Case</S.Title>
                    <S.Subtitle>Valor de faturamento mensal da distribuidora, detalhado por estado:</S.Subtitle>
                    {percentages?.map(result => (
                        <S.Text key={result?.state}>
                            {result?.state}: {result?.percentage}%
                        </S.Text>
                    ))}
                </S.BillingForState>

                <S.StringReverse>
                    <S.Title>4° Case</S.Title>
                    <S.Subtitle>Reverter uma string:</S.Subtitle>
                    <S.Form onSubmit={reverseString} >
                        <S.Input
                            required
                            type="text"
                            placeholder='Digite um texto'
                            value={inputReverse}
                            onChange={({ target }) => setInputReverse(target.value)} />
                        <S.Button>Reverter</S.Button>
                    </S.Form>
                    {resulteReverse && <S.Text>{resulteReverse}</S.Text>}
                </S.StringReverse>
            </S.Content>
        </>
    )
}
